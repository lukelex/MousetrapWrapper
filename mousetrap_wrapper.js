// Generated by CoffeeScript 1.6.2
(function() {
  window.MousetrapWrapper = {};

  MousetrapWrapper.Base = (function() {
    function Base(lib) {
      this.lib = lib != null ? lib : Mousetrap;
    }

    Base.prototype.events = function() {
      throw new Error('Events method not implemented');
    };

    Base.prototype.attach = function() {
      var event, _i, _len, _ref, _results;

      this.attached = true;
      _ref = this.events();
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        event = _ref[_i];
        _results.push(this.bindCallbackFor(event));
      }
      return _results;
    };

    Base.prototype.reattach = function() {
      if (this.attached) {
        throw new Error('Events already attached');
      }
      return this.attach();
    };

    Base.prototype.detach = function() {
      var event, _i, _len, _ref;

      if (!this.attached) {
        throw new Error('Events not yet attached');
      }
      _ref = this.events();
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        event = _ref[_i];
        this.unbindCallbackFor(event);
      }
      return this.attached = false;
    };

    Base.prototype.bindCallbackFor = function(event) {
      if (!event[1]) {
        throw new Error('Trying to attach an unexisting callback');
      }
      if (event.length === 2) {
        return this.lib.bind(event[0], event[1]);
      } else {
        return this.lib.bind(event[0], event[1], event[2]);
      }
    };

    Base.prototype.unbindCallbackFor = function(event) {
      return this.lib.unbind(event[0]);
    };

    return Base;

  })();

}).call(this);
